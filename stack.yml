version: "3.3"

networks:
  net:
    driver: overlay
    attachable: true

volumes:
    prometheus: {}
    alertmanager: {}
    grafana: {}
    mongo: {}

configs:
  pm_rules:
    file: ./stack/conf/rules.yml
  pm_config:
    file: ./stack/conf/prometheus.yml
  am_config:
    file: ./stack/conf/alertmanager.yml
  dockerd_config:
    file: ./stack/conf/DockerCaddyfile

services:
  prometheus:
    image: prom/prometheus:v2.3.0
    networks:
      - net
    ports:
    - 15010:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=360h'
      - '--storage.tsdb.no-lockfile'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: pm_rules
        target: /etc/prometheus/rules.yml
      - source: pm_config
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: global
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      resources:
        limits:
          memory: 48G
        reservations:
          memory: 8G

  dockerd-exporter:
    image: neru007/caddy:v1.0
    networks:
      - net
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: prom/alertmanager:v0.15.0
    networks:
      - net
    ports:
    - 15011:9093
    environment:
      - HTTPS_PROXY=http://10.144.106.132:8678
    volumes:
      - alertmanager:/alertmanager
    configs:
      - source: am_config
        target: /etc/alertmanager/config.yml
    deploy:
      mode: global
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 265M

  unsee:
    image: cloudflare/unsee:v0.9.2
    networks:
      - net
    ports:
    - 15672:8080
    environment:
      - "ALERTMANAGER_URIS=default:http://10.157.8.124:15011"
      - "WEB_PREFIX=/unsee/"
      - "SERVICE_CHECK_HTTP=/"
      - "ALERTMANAGER_PROXY=true"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  relay:
    image: neru007/relay:v1.1
    networks:
      - net
    ports:
      - 15013:8080
    environment:
      - "PROMETHEUS_RELAY_DNS=tasks.mon_prometheus"    
    deploy:
      mode: global
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  node-exporter:
    image: neru007/node-exporter:v1.0
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  cadvisor:
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M 

  grafana:
    image: neru007/grafana:5.0.1
    networks:
      - net
    ports:
      - 15015:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M 

  mongodb:
    image: mongo
    networks:
      - net
    ports:
    - 27017:27017
    volumes:
      - mongo:/data/db
    deploy:
      restart_policy:
        condition: any


  alerta:
    depends_on:
    - mongodb
    image: alerta/alerta-web:5.2.0
    networks:
      - net
    ports:
    - 15012:8080
    environment:
      - HTTPS_PROXY=http://10.144.106.132:8678
      - ADMIN_USERS=root@test.com
      - ALERTMANAGER_API_URL=http://10.157.8.124:15672
      - ALLOWED_EMAIL_DOMAIN='*'
      - ALLOWED_ENVIRONMENTS=Production
      - ALLOWED_GITHUB_ORGS='*'
      - ALLOWED_GITLAB_GROUPS='*'
      - AUTH_REQUIRED='False'
      - CLIENT_ID=not-set
      - CLIENT_SECRET=not-set
      - CUSTOMER_VIEWS='False'
      - GITLAB_URL=not-set
      - INSTALL_PLUGINS=reject,prometheus,amqp
      - MONGO_URI=mongodb://10.157.8.124:27017/monitoring
      - NO_PROXY=127.0.0.1,localhost,10.157.8.124
      - ORIGIN_BLACKLIST=not-set
      - PLUGINS=reject,prometheus,amqp
      - PROVIDER=basic
    deploy:
      restart_policy:
        condition: any
